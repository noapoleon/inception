name: inception
services:
  # Requirements
  nginx:
    container_name: nginx
    build: services/nginx
    ports:
      - "443:443"
    networks:
      - docker-network
    volumes:
      - wp:/var/www/wordpress
      - adminer:/var/www/adminer
    restart: unless-stopped
    env_file:
      - .env
    depends_on:
      - wordpress
      - adminer
      - resume

  mariadb:
    container_name: mariadb 
    build: services/mariadb
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "--user=${DB_USER}", "--password=${DB_PASS}"]
      interval: 3s
      timeout: 1s
      retries: 10
      start_period: 3s
    networks:
      - docker-network
    volumes:
      - db:/var/lib/mysql
    restart: unless-stopped
    env_file:
      - .env

  wordpress:
    container_name: wordpress
    build: services/wordpress
    networks:
      - docker-network
    volumes:
      - wp:/var/www/wordpress
    restart: unless-stopped
    env_file:
      - .env
    depends_on:
      mariadb:
          condition: service_healthy
      redis:
          condition: service_healthy

  # Bonuses
  adminer:
    container_name: adminer
    build: services/bonus/adminer
    networks:
      - docker-network
    volumes:
      - adminer:/var/www/adminer
    restart: unless-stopped
    env_file:
      - .env
    depends_on:
      mariadb:
        condition: service_healthy

  resume:
    container_name: resume
    build: services/bonus/resume
    networks:
      - docker-network
    volumes:
      - resume:/var/www/resume

  redis:
    container_name: redis
    build: services/bonus/redis
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 3s
      timeout: 1s
      retries: 10
      start_period: 3s
    networks:
      - docker-network
    volumes:
      - redis:/data
    restart: unless-stopped
    env_file:
      - .env

  ftp:
    container_name: ftp
    build: services/bonus/ftp
    ports:
      - "21100-21110:21100-21110"
      - "21:21"
    networks:
      - docker-network
    volumes:
      - wp:/var/www/wordpress
    restart: unless-stopped
    env_file:
      - .env

  uptime-kuma:
    container_name: uptime-kuma
    build: services/bonus/uptime-kuma
    ports:
      - "3001:3001"
    networks:
      - docker-network
    volumes:
      - kuma:/app/data
    restart: unless-stopped
    env_file:
      - .env

  # Monitoring
  prometheus:
    container_name: prometheus
    image: prom/prometheus
    networks:
      - docker-network
    ports:
      - "9090:9090"
    volumes:
      - ./services/prometheus/conf/prometheus.yml:/etc/prometheus/prometheus.yml
    restart: unless-stopped

networks:
  docker-network:
volumes:
  db:
    driver: local
    driver_opts:
      type: none
      device: ${VOL_DB}
      o: bind
  wp:
    driver: local
    driver_opts:
      type: none
      device: ${VOL_WP}
      o: bind
  adminer:
    driver: local
    driver_opts:
      type: none
      device: ${VOL_ADMINER}
      o: bind
  resume:
    driver: local
    driver_opts:
      type: none
      device: ${VOL_RESUME}
      o: bind
  redis:
    driver: local
    driver_opts:
      type: none
      device: ${VOL_REDIS}
      o: bind
  kuma:
    driver: local
    driver_opts:
      type: none
      device: ${VOL_KUMA}
      o: bind
